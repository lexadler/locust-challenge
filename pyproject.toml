[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
protobuf = "5.29.4"
locust = "2.37.1"
grpcio-tools = "1.71.0"
grpcio = "1.71.0"

[tool.poetry.group.lint.dependencies]
mypy = "1.11.2"
ruff = "0.6.8"

[tool.ruff]
exclude = [
    "__pycache__",
    "build",
    "eggs",
    "dist",
    "venv",
]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true
quote-style = "single"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false

[tool.ruff.lint]
# Docs: https://docs.astral.sh/ruff/rules/
select = [
    # flake8 defaults
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "C90",  # mccabe complexity
    # flake8 plugins
    "ANN", # flake8-annotations
    "S", # flake8-bandit
    "B",  # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "T10", # flake8-debugger
    "T20", # flake8-print
    "Q", # flake8-quotes
    "PTH", # flake8-use-pathlib
    # other rules
    "I", # isort
    "N", # pep8-naming
    "D101", # pydocstyle: Missing docstring in public class
    "RUF", # ruff-specific rules
]
ignore = [
    "ANN101", # flake8-annotations: Missing type annotation for self in method
    "ANN102", # flake8-annotations: Missing type annotation for cls in classmethod
    "ANN401", # flake8-annotations: Dynamically typed expressions (typing.Any) are disallowed
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.isort]
force-single-line = false

[tool.ruff.lint.mccabe]
max-complexity = 11

[tool.mypy]
namespace_packages = true
show_error_context = true
show_column_numbers = true
show_error_codes  = true
pretty  = true
color_output  = true
error_summary  = true
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"
